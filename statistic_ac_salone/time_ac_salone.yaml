homeassistant:
  customize:
    package.node_anchors:
        Entità clima:                               &climate        climate.condizionatore_salone
        # modificare entità set climate nei template

template:
  - sensor:
      - name: time_on_ac_salone
        state:  >-
          {%set climate = 'climate.condizionatore_salone' %}
          {%if not is_state(climate,'off') and as_timestamp(states[climate].last_changed) <= as_timestamp(now())%}
            {{((as_timestamp(now()) - as_timestamp(states.climate.condizionatore_salone.last_changed))/3600)}}
          {% else %}
            0
          {% endif %}

  - trigger:
      - platform: state
        entity_id: *climate
        not_to: 'off'
    sensor:
      - name: inizio_ac_salone
        state: "{{as_timestamp(now())}}"

  - trigger:
      - platform: state
        entity_id: *climate
        to: 'off'
    sensor:
      - name: fine_ac_salone
        state: "{{as_timestamp(now())}}"

  - sensor:
      - name: condizionatore_salone
        icon: mdi:history
        state: >
          {%set climate = 'climate.condizionatore_salone' %}
          {%set time =(as_timestamp(now()) - states('sensor.inizio_ac_salone')|float(0))/3600 %}
          {% set minutes = ((time % 1) * 60) | int (0)%}
          {% set hours = (time - (time % 1)) | int(0) %}
          {%if not is_state(climate,'off')%}
            {% if hours|int >0 %}
              {{hours}}h {{minutes}}m
            {% else %}
              {{minutes}}min
            {% endif %}
          {% else %}
            {%set time =(states('sensor.fine_ac_salone')|float(0)-states('sensor.inizio_ac_salone')|float(0))/3600%}
            {% set minutes = ((time % 1) * 60) | int (0)%}
            {% set hours = (time - (time % 1)) | int(0) %}
            {%set day = ((hours |int /24))|int(0) %}
              {% if day|int(0) >0 %}
              {{day}}d {{(hours|int)-(day*24)}}h {{minutes}}m
            {% elif hours|int(0) >0 %}
              {{hours}}h {{minutes}}m
            {% else %}
              {{minutes}}min
            {% endif %}
          {% endif %}
        attributes:
          Oggi: >
            {% set time = states('sensor.tempo_oggi_ac_salone') | float(0) %}
            {% set minutes = ((time % 1) * 60) | int(0) %}
            {% set hours = (time - (time % 1)) | int(0) %}
              {% if hours|int(0) >0 %}
                {{hours}}h {{minutes}}m
              {% else %}
                {{minutes}}min
              {% endif %}
          Ieri: >
            {% set time = state_attr('sensor.tempo_oggi_ac_salone', 'last_period') | float(0) %}
            {% set minutes = ((time % 1) * 60) | int(0) %}
            {% set hours = (time - (time % 1)) | int(0) %}
              {% if hours|int(0) >0 %}
                {{hours}}h {{minutes}}m
              {% else %}
                {{minutes}}min
              {% endif %}
          Mese: >
            {% set time = states('sensor.tempo_mese_ac_salone') | float(0) %}
            {% set minutes = ((time % 1) * 60) | int(0) %}
            {% set hours = (time - (time % 1)) | int(0) %}
            {%set day = ((hours |int /24))|int(0) %}
              {% if day|int(0) >0 %}
                {{day}}d {{(hours|int)-(day*24)}}h {{minutes}}m
              {% elif hours|int(0) >0 %}
                {{hours}}h {{minutes}}m
              {% else %}
                {{minutes}}min
              {% endif %}
          Anno: >
              {% set time = states('sensor.tempo_anno_ac_salone') | float(0) %}
              {% set minutes = ((time % 1) * 60) | int(0) %}
              {% set hours = (time - (time % 1)) | int(0) %}
              {%set day = ((hours |int(0) /24))|int(0) %}
                {% if day|int(0) >0 %}
                  {{day}}d {{(hours|int(0))-(day*24)}}h {{minutes}}m
                {% elif hours|int(0) >0 %}
                  {{hours}}h {{minutes}}m
                {% else %}
                  {{minutes}}min
                {% endif %}

utility_meter:
  tempo_oggi_ac_salone:
    source: sensor.time_on_ac_salone
    cycle: daily
  tempo_anno_ac_salone:
    source: sensor.time_on_ac_salone
    cycle: yearly
  tempo_mese_ac_salone:
    source: sensor.time_on_ac_salone
    cycle: monthly